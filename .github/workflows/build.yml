name: Build Engine

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu' ]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master
      - name: Apt Update
        run: sudo apt-get update
      - name: Ensure build folder exists
        run: mkdir -p /tmp/builds/${{ matrix.os }}-64/
      # - name: Add Mingw-64 Apt Repo
      #   run: sudo add-apt-repository ppa:tobydox/mingw-x-trusty
      # - name: Install Mingw dependencies
      #   run: >
      #     sudo apt-get install mingw-x-binutils mingw-x-gcc
      #     mingw-x-runtime mingw-x-w32api
      - name: Install build dependencies
        run: >
          sudo apt-get install --fix-missing libglew-dev libsdl2-dev libdevil-dev 
          libogg-dev libvorbis-dev libfreetype6-dev p7zip-full libxcursor-dev 
          libboost-thread-dev libboost-regex-dev libboost-system-dev 
          libboost-program-options-dev libboost-signals-dev libopenal-dev 
          libboost-chrono-dev libboost-filesystem-dev libunwind8-dev 
          default-jdk libcurl4-gnutls-dev binutils-gold
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%V")"
        shell: bash
      - uses: actions/cache@v2
        id: cache
        with:
          path: '/tmp/builds/${{ matrix.os }}-64'
          key: ${{ matrix.os }}-64-${{ steps.get-date.outputs.date }}-${{ github.ref }}
      - name: Run CMake
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          buildDirectory: '/tmp/builds/${{ matrix.os }}-64'
          cmakeGenerator: 'UnixMakefiles'
          cmakeListsOrSettingsJson: 'CMakeListsTxtAdvanced'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useShell: bash
          buildWithCMake: false
      - name: Make Engine
        run: "make spring -j4"
        working-directory: '/tmp/builds/${{ matrix.os }}-64'
      - name: Setup Artefact Folder
        run : |
          mkdir -p /tmp/engine/${{ matrix.os }}-64
          cp /tmp/builds/${{ matrix.os }}-64/libunitsync.so /tmp/engine/${{ matrix.os }}-64
          cp /tmp/builds/${{ matrix.os }}-64/springsettings.cfg /tmp/engine/${{ matrix.os }}-64
          cp /tmp/builds/${{ matrix.os }}-64/spring /tmp/engine/${{ matrix.os }}-64
          cp -rf /tmp/builds/${{ matrix.os }}-64/base /tmp/engine/${{ matrix.os }}-64
          cp -rf /tmp/builds/${{ matrix.os }}-64/AI /tmp/engine/${{ matrix.os }}-64
          find /tmp/engine/${{ matrix.os }}-64/AI -name "CMakeFiles" -type d -exec rm -rf {} \;
          find /tmp/engine/${{ matrix.os }}-64/AI -name "cmake_install.cmake" -type f -delete
          find /tmp/engine/${{ matrix.os }}-64/AI -name "Makefile" -type f -delete
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.os}}-${{matrix.arch}}
          path: '/tmp/engine/${{ matrix.os }}-64' # or path/to/artifact ${{ github.workspace }}/../..
